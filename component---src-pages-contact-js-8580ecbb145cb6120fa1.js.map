{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./src/components/Article/Headline.js","webpack:///./src/components/Article/Article.js","webpack:///./src/components/Article/index.js","webpack:///./src/components/Notification/Notification.js","webpack:///./src/components/Contact/Contact.js","webpack:///./src/components/Section/Contact.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_layouts__WEBPACK_IMPORTED_MODULE_1__","_components_Article__WEBPACK_IMPORTED_MODULE_2__","_components_Section_Contact__WEBPACK_IMPORTED_MODULE_3__","ContactPage","a","createElement","Fragment","Consumer","theme","Headline","props","title","description","children","react__WEBPACK_IMPORTED_MODULE_1___default","className","styled_jsx_style__WEBPACK_IMPORTED_MODULE_0___default","dynamic","font","size","xxl","space","stack","l","time","duration","long","weight","standard","xs","color","brand","primary","xl","styleId","css","propTypes","PropTypes","string","node","object","isRequired","Article","react_default","style_default","inset","d","components_Article_Article","Notification","render","_this$props","this","message","type","default","React","Component","defaultProps","FormItem","Form","Item","TextArea","Input","NOTIFICATION_DISPLAY_TIME","Contact","nameRef","createRef","emailRef","messageRef","state","showNotification","handleSubmit","e","preventDefault","_this","form","validateFields","err","values","console","log","sendMessage","hideNotification","setTimeout","setState","current","value","name","email","document","forms","gform","submit","_this2","getFieldDecorator","layouts","Notification_Notification","width","height","border","style","display","id","method","action","target","placeholder","ref","required","rows","form_default","onSubmit","data-netlify","data-netlify-honeypot","label","rules","whitespace","input_default","autosize","minRows","maxRows","button_default","htmlType","ContactForm","create","ContactSection","components_Contact_Contact"],"mappings":"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","file":"component---src-pages-contact-js-8580ecbb145cb6120fa1.js","sourcesContent":["import React from \"react\";\nimport { ThemeContext } from \"../layouts\";\nimport Article from \"../components/Article\";\nimport Contact from \"../components/Section/Contact\";\n\nconst ContactPage = () => (\n  <React.Fragment>\n    <ThemeContext.Consumer>\n      {theme => (\n        <Article theme={theme}>\n          <Contact theme={theme} />\n        </Article>\n      )}\n    </ThemeContext.Consumer>\n  </React.Fragment>\n);\n\nexport default ContactPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Headline = props => {\n  const {\n    title,\n    description,\n    children,\n    theme\n  } = props;\n  return (\n    <React.Fragment>\n      {title ? (\n        <h1>\n          {title}\n          <span className=\"underline\" />\n          {description ? <span className=\"description\">{description}</span> : null}\n        </h1>\n      ) : <h1>{children}</h1>}\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        h1 {\n          font-size: ${theme.font.size.xxl};\n          margin: ${theme.space.stack.l};\n          animation-name: headlineEntry;\n          animation-duration: ${theme.time.duration.long};\n          text-align: center;\n\n          .underline {\n            :before {\n              content: \"\";\n              display: block;\n              width: 100px;\n              height: 3px;\n              bottom: 0;\n              left: 0;\n              border-top: lightblue solid 4px;\n              right: 0;\n              text-align: center;\n              margin: 8px auto;\n            }\n          }\n\n          .description {\n            font-size: medium;\n            padding: 4px 0px;\n            font-style: italic;\n          }\n\n          :global(span) {\n            font-weight: ${theme.font.weight.standard};\n            display: block;\n            font-size: 0.5em;\n            letter-spacing: 0;\n            margin: ${theme.space.stack.xs};\n          }\n\n          :global(svg) {\n            height: 0.75em;\n            fill: ${theme.color.brand.primary};\n          }\n        }\n\n        @keyframes headlineEntry {\n          from {\n            opacity: 0.5;\n          }\n          to {\n            opacity: 1;\n          }\n        }\n\n        @from-width tablet {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.2)`};\n          }\n        }\n\n        @from-width desktop {\n          h1 {\n            font-size: ${`calc(${theme.font.size.xl} * 1.4)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nHeadline.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Headline;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Article = props => {\n  const { children, theme } = props;\n\n  return (\n    <React.Fragment>\n      <article className=\"article\">{children}</article>\n\n      {/* --- STYLES --- */}\n      <style jsx>{`\n        .article {\n          padding-top: 0px;\n          margin: 0 auto;\n        }\n\n        @from-width desktop {\n          .article {\n            padding-top: ${`calc(${theme.space.inset.l} * 1.5)`};\n          }\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nArticle.propTypes = {\n  children: PropTypes.node.isRequired,\n  theme: PropTypes.object.isRequired\n};\n\nexport default Article;\n","export { default } from \"./Article\";\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class Notification extends React.Component {\n  static propTypes = {\n    theme: PropTypes.object.isRequired,\n    message: PropTypes.string.isRequired,\n    type: PropTypes.string\n  };\n\n  static defaultProps = {\n    type: \"info\"\n  };\n\n  render() {\n    const { message, type, theme } = this.props;\n\n    return (\n      <React.Fragment>\n        <div className={`notification-header ${type}`}>{message}</div>\n        <style jsx>{`\n          .notification-header {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            position: fixed;\n            top: 0;\n            left: 0;\n            z-index: 1000;\n            width: 100%;\n            height: 70px;\n            animation-name: slideDown;\n            animation-duration: ${theme.time.duration.default};\n            background: lightblue;\n          }\n\n          .info {\n            background: lightblue;\n          }\n\n          .success {\n            background: lightgreen;\n          }\n\n          .error {\n            background: red;\n          }\n\n          @keyframes slideDown {\n            from {\n              height: 0;\n            }\n            to {\n              height: 70px;\n            }\n          }\n        `}</style>\n      </React.Fragment>\n    );\n  }\n}\n","/* eslint no-unused-vars: 0 */\n\nimport { navigate } from \"gatsby\";\nimport Button from \"antd/lib/button\";\nimport Form from \"antd/lib/form\";\nimport Input from \"antd/lib/input\";\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\nimport \"antd/lib/form/style/index.css\";\nimport \"antd/lib/input/style/index.css\";\nimport \"antd/lib/button/style/index.css\";\nimport { ThemeContext } from \"../../layouts\";\nimport Notification from \"../Notification\";\n\nconst NOTIFICATION_DISPLAY_TIME = 5000; //ms\n\nfunction encode(data) {\n  return Object.keys(data)\n    .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n    .join(\"&\");\n}\n\nclass Contact extends React.Component {\n  nameRef = React.createRef();\n  emailRef = React.createRef();\n  messageRef = React.createRef();\n\n  state = {\n    showNotification: false\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        this.sendMessage(values);\n      }\n    });\n  };\n\n  hideNotification = () => {\n    setTimeout(() => {\n      this.setState({\n        showNotification: false\n      });\n    }, NOTIFICATION_DISPLAY_TIME);\n  };\n\n  sendMessage(values) {\n    this.nameRef.current.value = values.name;\n    this.emailRef.current.value = values.email;\n    this.messageRef.current.value = values.message;\n    document.forms.gform.submit();\n    // TODO handle error? Maybe retry logic paried with saving to local storage.\n    // TODO Also setup logs in gform handler for failed request.\n    // navigate(\"/success\");\n    this.setState({ showNotification: true });\n    this.hideNotification();\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { showNotification } = this.state;\n    return (\n      <React.Fragment>\n        <ThemeContext.Consumer>\n          {theme => (\n            <div className=\"form\">\n              {showNotification && (\n                <Notification\n                  message=\"We appreciate your messege. You should hear from us shortly.\"\n                  type=\"success\"\n                  theme={theme}\n                />\n              )}\n              <iframe\n                name=\"hiddenFrame\"\n                width=\"0\"\n                height=\"0\"\n                border=\"0\"\n                style={{ display: \"none\" }}\n              />\n              <form\n                id=\"gform\"\n                name=\"gform\"\n                method=\"POST\"\n                action=\"https://script.google.com/macros/s/AKfycbxTQksx4u6CQMaYvN7L_W0U8GjV7WbADNkPws-EhSKy7sFKFts/exec\"\n                target=\"hiddenFrame\"\n                style={{ display: \"none\" }}\n              >\n                <input id=\"name\" name=\"name\" placeholder=\"Name\" ref={this.nameRef} />\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  required\n                  placeholder=\"Please Enter Your Email!\"\n                  ref={this.emailRef}\n                />\n                <textarea id=\"message\" name=\"message\" rows=\"10\" ref={this.messageRef} />\n                <input type=\"submit\" />\n              </form>\n\n              <Form\n                id=\"gform\"\n                name=\"gform\"\n                onSubmit={this.handleSubmit}\n                data-netlify=\"true\"\n                data-netlify-honeypot=\"bot-field\"\n              >\n                <FormItem label=\"Name\">\n                  {getFieldDecorator(\"name\", {\n                    rules: [\n                      {\n                        whitespace: true\n                      }\n                    ]\n                  })(<Input name=\"name\" />)}\n                </FormItem>\n                <FormItem label=\"E-mail\">\n                  {getFieldDecorator(\"email\", {\n                    rules: [\n                      {\n                        required: true,\n                        message: \"Please input your e-mail address!\",\n                        whitespace: true,\n                        type: \"email\"\n                      }\n                    ]\n                  })(<Input name=\"email\" />)}\n                </FormItem>\n                <FormItem label=\"Message\">\n                  {getFieldDecorator(\"message\", {\n                    rules: [\n                      { required: true, message: \"Please input your message!\", whitespace: true }\n                    ]\n                  })(\n                    <TextArea\n                      name=\"message\"\n                      placeholder=\"\"\n                      autosize={{ minRows: 4, maxRows: 10 }}\n                    />\n                  )}\n                </FormItem>\n                <FormItem>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Submit\n                </Button>\n                </FormItem>\n              </Form>\n\n              <style jsx>{`\n              .form {\n                background: transparent;\n              }\n              .form :global(.ant-row.ant-form-item) {\n                margin: 0 0 1em;\n              }\n              .form :global(.ant-row.ant-form-item:last-child) {\n                margin-top: 1em;\n              }\n              .form :global(.ant-form-item-control) {\n                line-height: 1em;\n              }\n              .form :global(.ant-form-item-label) {\n                line-height: 1em;\n                margin-bottom: 0.5em;\n              }\n              .form :global(.ant-form-item) {\n                margin: 0;\n              }\n              .form :global(.ant-input) {\n                appearance: none;\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 0.6em;\n              }\n              .form :global(.ant-btn-primary) {\n                height: auto;\n                font-size: 1.2em;\n                padding: 0.5em 3em;\n                // background: ${theme.color.brand.primary};\n                border: 1px solid ${theme.color.brand.primary};\n              }\n              .form :global(.ant-form-explain) {\n                margin-top: 0.2em;\n              }\n\n              @from-width desktop {\n                .form :global(input) {\n                  // max-width: 50%;\n                }\n              }\n            `}</style>\n            </div>\n          )}\n        </ThemeContext.Consumer>\n      </React.Fragment>\n    );\n  }\n}\n\nconst ContactForm = Form.create({})(Contact);\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Headline from \"../Article/Headline\";\nimport Contact from \"../../components/Contact\";\n\nexport default class ContactSection extends React.Component {\n  static propTypes = {\n    theme: PropTypes.object.isRequired\n  };\n\n  render() {\n    const { theme } = this.props;\n\n    return (\n      <React.Fragment>\n        <section>\n          <header>\n            <Headline\n              title=\"Contact Us\"\n              description=\"We look forward to hearing from you!\"\n              theme={theme}\n            />\n          </header>\n          <div className=\"content-container\">\n            <Contact />\n          </div>\n        </section>\n        <style jsx>{`\n          section {\n            padding-top: ${theme.space.l};\n            padding-bottom: ${theme.space.l};\n            animation-name: onEntry;\n            animation-duration: ${theme.time.duration.long};\n          }\n\n          .content-container {\n            padding: 0px 40px;\n            width: 100%;\n            .content-description {\n              text-align: center;\n            }\n          }\n\n          @keyframes onEntry {\n            from {\n              opacity: 0;\n            }\n            to {\n              opacity: 1;\n            }\n          }\n        `}</style>\n      </React.Fragment>\n    );\n  }\n}\n"],"sourceRoot":""}